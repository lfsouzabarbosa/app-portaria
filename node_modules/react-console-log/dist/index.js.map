{"version":3,"file":"index.js","sources":["../src/variables.ts","../src/helpers.ts","../src/actions.ts","../src/useStore.ts","../src/service.ts","../src/clearConsole.ts","../src/components/ClearConsoleButton.tsx","../src/styles.ts","../src/components/EnableConsoleButton.tsx","../src/components/PersistConsoleButton.tsx","../src/components/OpenConsoleButton.tsx","../src/components/LogItem.tsx","../src/components/ConsoleLog.tsx"],"sourcesContent":["import { LogType } from './types'\r\n\r\nexport const version = \"1.1.0\";\r\n\r\nexport const logTypes: Record<LogType, LogType> = {\r\n  log: 'log',\r\n  info: 'info',\r\n  error: 'error',\r\n  debug: 'debug',\r\n  exception: 'exception',\r\n  trace: 'trace',\r\n  warn: 'warn'\r\n}\r\n\r\nexport const persistOptionsName = 'useConsoleStore';\r\n\r\nexport const persistId = `${persistOptionsName}-console-logs`;","import { ConsoleState } from './types'\r\nimport { persistLocal } from '@yehonadav/safestorage'\r\nimport { persistId } from './variables'\r\n\r\nexport const saveConsoleInStorage = (console: ConsoleState): void => {\r\n  persistLocal.setItem(persistId, console)\r\n}\r\n\r\nexport const initConsoleState = (): ConsoleState => {\r\n  let consoleLogs = persistLocal.tryToGetItem(persistId).value as ConsoleState | undefined\r\n\r\n  if (!consoleLogs) {\r\n    consoleLogs = { logs: [] };\r\n    saveConsoleInStorage(consoleLogs);\r\n  }\r\n  \r\n  return consoleLogs\r\n}\r\n\r\n","import { saveConsoleInStorage } from './helpers'\r\nimport { getConsole, reRenderConsole } from './useStore'\r\nimport { logTypes } from './variables'\r\nimport { safeStringify } from '@yehonadav/safestringify'\r\nimport { IConsoleMessage } from './interfaces'\r\n\r\nexport const _log = console.log\r\nexport const _info = console.info\r\nexport const _error = console.error\r\nexport const _debug = console.debug\r\nexport const _exception = console.exception\r\nexport const _trace = console.trace\r\nexport const _warn = console.warn\r\n\r\nconst sendConsoleMessage = (props: IConsoleMessage) => {\r\n  const date = new Date()\r\n  getConsole().logs.push(...props.messages.map(object => ({\r\n    type: props.logLevel,\r\n    message: safeStringify(object),\r\n    object,\r\n    date\r\n  })))\r\n}\r\n\r\nexport const setConsoleVersion = (version: string): void => {\r\n  const message = `Console Version ${version}`;\r\n  _log(message);\r\n  sendConsoleMessage({ logLevel: logTypes.log, messages: [message] });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleLog = (...args: any[]) => {\r\n  _log(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.log, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleTrace = (...args: any[]) => {\r\n  _trace(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.trace, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleDebug = (...args: any[]) => {\r\n  _debug(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.debug, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleInfo = (...args: any[]) => {\r\n  _info(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.info, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleWarn = (...args: any[]) => {\r\n  _warn(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.warn, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleError = (...args: any[]) => {\r\n  _error(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.error, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleException = (...args: any[]) => {\r\n  _exception(...args);\r\n  sendConsoleMessage({ logLevel: logTypes.exception, messages: args });\r\n  reRenderConsole();\r\n}\r\n\r\nexport const consoleLogPersist = (...args: any[]) => {\r\n  consoleLog(...args);\r\n  saveConsoleInStorage(getConsole());\r\n}\r\n\r\nexport const consoleTracePersist = (...args: any[]) => {\r\n  consoleTrace(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const consoleDebugPersist = (...args: any[]) => {\r\n  consoleDebug(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const consoleInfoPersist = (...args: any[]) => {\r\n  consoleInfo(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const consoleWarnPersist = (...args: any[]) => {\r\n  consoleWarn(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const consoleErrorPersist = (...args: any[]) => {\r\n  consoleError(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const consoleExceptionPersist = (...args: any[]) => {\r\n  consoleException(...args)\r\n  saveConsoleInStorage(getConsole())\r\n}\r\n\r\nexport const setDefaultLogger = () => {\r\n  console.log = _log\r\n  console.info = _info\r\n  console.error = _error\r\n  console.debug = _debug\r\n  console.exception = _exception\r\n  console.trace = _trace\r\n  console.warn = _warn\r\n}\r\n\r\nexport const setLoggerForEnabledConsole = () => {\r\n  console.log = consoleLog\r\n  console.trace = consoleTrace\r\n  console.debug = consoleDebug\r\n  console.info = consoleInfo\r\n  console.warn = consoleWarn\r\n  console.error = consoleError\r\n  console.exception = consoleException\r\n}\r\n\r\nexport const setLoggerForPersistentConsole = () => {\r\n  console.log = consoleLogPersist\r\n  console.trace = consoleTracePersist\r\n  console.debug = consoleDebugPersist\r\n  console.info = consoleInfoPersist\r\n  console.warn = consoleWarnPersist\r\n  console.error = consoleErrorPersist\r\n  console.exception = consoleExceptionPersist\r\n}\r\n\r\nexport const setLoggerFunctions = (isEnabled: boolean, isPersistent: boolean) => {\r\n  !isEnabled\r\n    ? setDefaultLogger()\r\n    : isPersistent\r\n    ? setLoggerForPersistentConsole()\r\n    : setLoggerForEnabledConsole()\r\n}\r\n","import createStore from 'zustand'\r\nimport { clearDataService, getStorageCall } from '@yehonadav/safestorage'\r\nimport { persist } from 'zustand/middleware'\r\nimport { ConsoleState, PersistOptions, State } from './types'\r\nimport { persistId, persistOptionsName } from './variables'\r\nimport { initConsoleState } from './helpers'\r\nimport { setLoggerFunctions } from './actions'\r\n\r\nconst state: State = {\r\n  console: initConsoleState(),\r\n  open: false,\r\n  persist: false,\r\n  enabled: false,\r\n};\r\n\r\nconst stateCreator = ():State => state;\r\n\r\nconst persistOptions: PersistOptions = {\r\n  name: persistOptionsName, // set a unique name\r\n  whitelist: ['open', 'persist', 'enabled'],\r\n  getStorage: getStorageCall,\r\n};\r\n\r\nconst useStore = createStore<State>(persist(\r\n  stateCreator,\r\n  persistOptions,\r\n));\r\n\r\n// data will persist even after logout\r\nclearDataService.excludeLocalStorageItem(persistOptions.name);\r\nclearDataService.excludeLocalStorageItem(persistId);\r\n\r\n// getters\r\nconst get = useStore.getState;\r\nconst getConsole = ():ConsoleState => get().console;\r\nconst isConsolePersistent = ():boolean => get().persist;\r\nconst isConsoleOpen = ():boolean => get().open;\r\nconst isConsoleEnabled = ():boolean => get().enabled;\r\n\r\n// setters\r\nconst set = useStore.setState;\r\nconst setConsoleLogs = ():void => set(s => ({console:{...s.console, logs: []}}));\r\nconst setConsolePersistent = (persist:boolean):void => {setLoggerFunctions(isConsoleEnabled(), persist); set({persist})};\r\nconst setConsoleOpen = (open:boolean):void => set({open});\r\nconst setConsoleEnabled = (enabled:boolean):void => {setLoggerFunctions(enabled, isConsolePersistent()); set({enabled})};\r\nconst setConsolePersistentTrue = ():void => setConsolePersistent(true);\r\nconst setConsoleOpenTrue = ():void => setConsoleOpen(true);\r\nconst setConsoleEnabledTrue = ():void => setConsoleEnabled(true);\r\nconst setConsolePersistentFalse = ():void => setConsolePersistent(false);\r\nconst setConsoleOpenFalse = ():void => setConsoleOpen(false);\r\nconst setConsoleEnabledFalse = ():void => setConsoleEnabled(false);\r\nconst toggleConsolePersistent = ():void => setConsolePersistent(!get().persist);\r\nconst toggleConsoleOpen = ():void => setConsoleOpen(!get().open);\r\nconst toggleConsoleEnabled = ():void => setConsoleEnabled(!get().enabled);\r\n\r\n// actions\r\nconst reRenderConsole = ():void => set((s:State)=>({console:{...s.console}}));\r\n\r\n// helpers\r\nconst fetchConsole = (s:State) => s.console;\r\nconst fetchIsConsolePersistent = (s:State) => s.persist;\r\nconst fetchIsConsoleOpen = (s:State) => s.open;\r\nconst fetchIsConsoleEnabled = (s:State) => s.enabled;\r\n\r\n// hooks\r\nconst useConsole = ():ConsoleState => useStore(fetchConsole);\r\nconst useIsConsolePersistent = ():boolean => useStore(fetchIsConsolePersistent);\r\nconst useIsConsoleOpen = ():boolean => useStore(fetchIsConsoleOpen);\r\nconst useIsConsoleEnabled = ():boolean => useStore(fetchIsConsoleEnabled);\r\n\r\nexport {\r\n  useStore as useConsoleStore,\r\n  get as getConsoleStoreState,\r\n  set as setConsoleStoreState,\r\n\r\n  getConsole,\r\n  isConsolePersistent,\r\n  isConsoleOpen,\r\n  isConsoleEnabled,\r\n\r\n  setConsoleLogs,\r\n  setConsolePersistent,\r\n  setConsoleOpen,\r\n  setConsoleEnabled,\r\n  setConsolePersistentTrue,\r\n  setConsoleOpenTrue,\r\n  setConsoleEnabledTrue,\r\n  setConsolePersistentFalse,\r\n  setConsoleOpenFalse,\r\n  setConsoleEnabledFalse,\r\n  toggleConsolePersistent,\r\n  toggleConsoleOpen,\r\n  toggleConsoleEnabled,\r\n\r\n  reRenderConsole,\r\n\r\n  useConsole,\r\n  useIsConsolePersistent,\r\n  useIsConsoleOpen,\r\n  useIsConsoleEnabled,\r\n}","import { setConsoleVersion } from './actions'\r\nimport { Logger } from './types'\r\n\r\ntry {\r\n  window.console = console;\r\n}\r\ncatch (e) {\r\n  console.warn({\r\n    window: {\r\n      message: \"failed to set window.console\",\r\n    }\r\n  })\r\n}\r\n\r\nconst logger = console as Logger;\r\n\r\nlogger.setVersion = setConsoleVersion;\r\n\r\nexport {\r\n  logger\r\n}","import { setConsoleStoreState } from './useStore'\r\nimport { ConsoleState, State } from './types'\r\nimport { logger } from './service'\r\nimport { saveConsoleInStorage } from './helpers'\r\n\r\nexport const clearConsole = (): void => setConsoleStoreState((s: State) => {\r\n  logger.clear();\r\n  const consoleState: ConsoleState = { ...s.console, logs: [] };\r\n  saveConsoleInStorage(consoleState)\r\n  return { console: consoleState }\r\n})","import React, {FC} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { clearConsole } from '../clearConsole'\r\nimport { ButtonTypeMap } from '@material-ui/core/Button/Button'\r\n\r\nexport const ClearConsoleButton:FC<ButtonTypeMap | {}> = (props) => {\r\n  return (\r\n    <Button onClick={clearConsole} variant=\"contained\" {...props}>\r\n      Clear\r\n    </Button>\r\n  )\r\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nexport const useConsoleStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: 16,\r\n    paddingTop: 48,\r\n    paddingBottom: 90,\r\n  },\r\n\r\n  Grid: {\r\n    width: \"100%\",\r\n    height: 800,\r\n    overflow: \"auto\",\r\n    background: \"#fff\",\r\n    borderRadius: 5,\r\n  },\r\n\r\n  messageContainer: {\r\n\r\n  },\r\n\r\n  logMessageType: {\r\n    fontSize: 12,\r\n    fontWeight: 200,\r\n  },\r\n\r\n  logType: {\r\n    fontSize: 12,\r\n    fontWeight: 600,\r\n  },\r\n\r\n  message: {\r\n\r\n  },\r\n\r\n  \"logMessage-type-log\": {\r\n    background: \"#e5e2e2\",\r\n    color: \"#1e1f1f\",\r\n    fontSize: 18,\r\n    fontWeight: 400,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-info\": {\r\n    background: \"#5E9FFF\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-error\": {\r\n    background: \"#e35d5d\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-debug\": {\r\n    background: \"#2e383c\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-exception\": {\r\n    background: \"#ba1414\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-trace\": {\r\n    background: \"#151618\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n  \"logMessage-type-warn\": {\r\n    background: \"#f5a364\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    fontFamily: \"Segoe UI\",\r\n    borderRadius: 5,\r\n    padding: 12,\r\n  },\r\n\r\n})","import React, {FC} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { ButtonTypeMap } from '@material-ui/core/Button/Button'\r\nimport { toggleConsoleEnabled, useIsConsoleEnabled } from '../useStore'\r\n\r\nexport const EnableConsoleButton:FC<ButtonTypeMap | {}> = (props) => {\r\n  const isConsoleEnabled = useIsConsoleEnabled();\r\n  return (\r\n    <Button onClick={toggleConsoleEnabled} variant=\"contained\" {...props}>\r\n      {isConsoleEnabled ? 'Stop' : 'Enable'} Logging\r\n    </Button>\r\n  )\r\n}","import React, {FC} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { ButtonTypeMap } from '@material-ui/core/Button/Button'\r\nimport { toggleConsolePersistent, useIsConsolePersistent } from '../useStore'\r\n\r\nexport const PersistConsoleButton:FC<ButtonTypeMap | {}> = (props) => {\r\n  const isConsolePersistent = useIsConsolePersistent();\r\n  return (\r\n    <Button onClick={toggleConsolePersistent} variant=\"contained\" {...props}>\r\n      {isConsolePersistent ? 'Disable' : 'Enable'} Storage\r\n    </Button>\r\n  )\r\n}","import React from 'react'\r\nimport { FC } from 'react'\r\nimport { IconButton } from '@material-ui/core'\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport { IconButtonTypeMap } from '@material-ui/core/IconButton/IconButton'\r\nimport { SvgIconTypeMap } from '@material-ui/core/SvgIcon/SvgIcon'\r\nimport { toggleConsoleOpen } from '../useStore'\r\n\r\nexport interface IOpenConsoleButton {\r\n  iconButtonProps?: IconButtonTypeMap;\r\n  bugReportIconProps?: SvgIconTypeMap;\r\n}\r\n\r\nexport const OpenConsoleButton:FC<IOpenConsoleButton> = ({ iconButtonProps={}, bugReportIconProps={} }) => {\r\n  return (\r\n    <IconButton {...iconButtonProps}>\r\n      <BugReportIcon onClick={toggleConsoleOpen} {...bugReportIconProps}/>\r\n    </IconButton>\r\n  )\r\n}","import React, { FC } from 'react'\r\nimport { LogMessage } from '../types'\r\nimport { useConsoleStyles } from '../styles'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nexport const LogItem: FC<{ logMessage: LogMessage }> = ({ logMessage }) => {\r\n  const classes = useConsoleStyles()\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.messageContainer}>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        // @ts-ignore\r\n        className={classes[`logMessage-type-${logMessage.type}`]}\r\n      >\r\n        <Grid item className={classes.logType}>\r\n          {logMessage.type.toUpperCase()}\r\n        </Grid>\r\n\r\n        <Grid item className={classes.logMessageType}>\r\n          [{logMessage.date.toLocaleDateString()}-{logMessage.date.toLocaleTimeString()}] [{typeof logMessage.message}]\r\n        </Grid>\r\n\r\n        <Grid item className={classes.message} xs={12}>\r\n        <pre>\r\n          {logMessage.message}\r\n        </pre>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import React, { FC } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { getConsoleStoreState, useConsole, useIsConsoleOpen } from '../useStore'\r\nimport { logger } from '../service'\r\nimport { useConsoleStyles } from '../styles'\r\nimport { ClearConsoleButton } from './ClearConsoleButton'\r\nimport { EnableConsoleButton } from './EnableConsoleButton'\r\nimport { PersistConsoleButton } from './PersistConsoleButton'\r\nimport { OpenConsoleButton } from './OpenConsoleButton'\r\nimport { LogItem } from './LogItem'\r\nimport { version } from '../variables'\r\nimport { setLoggerFunctions } from '../actions'\r\n\r\nconst onConsoleLoad = () => {\r\n  const { enabled, persist, console } = getConsoleStoreState();\r\n\r\n  // make sure persist dates are not strings\r\n  console.logs.forEach(log => {log.date = new Date(log.date)});\r\n\r\n  // set correct functions on load\r\n  setLoggerFunctions(enabled, persist);\r\n\r\n  // set console version\r\n  logger.setVersion(version);\r\n}\r\n\r\nonConsoleLoad();\r\n\r\nexport const ConsoleLog:FC = () => {\r\n  const consoleLog = useConsole();\r\n  const classes = useConsoleStyles();\r\n  const open = useIsConsoleOpen();\r\n\r\n  if (!open)\r\n    return <OpenConsoleButton/>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} style={{marginBottom: 8}}>\r\n        <Grid item>\r\n          <OpenConsoleButton/>\r\n        </Grid>\r\n        <Grid item style={{marginTop: 4}}>\r\n          <ClearConsoleButton/>\r\n        </Grid>\r\n        <Grid item style={{marginTop: 4}}>\r\n          <EnableConsoleButton/>\r\n        </Grid>\r\n        <Grid item style={{marginTop: 4}}>\r\n          <PersistConsoleButton/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3} className={classes.Grid}>\r\n        {consoleLog.logs.map((logMessage, index) =>\r\n          <LogItem logMessage={logMessage} key={index}/>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}"],"names":["persistLocal","safeStringify","getStorageCall","persist","clearDataService","setConsoleStoreState","Button","IconButton","Grid","getConsoleStoreState"],"mappings":"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"}