import { ConsoleState, State } from './types';
declare const useStore: import("zustand").UseStore<State>;
declare const get: import("zustand").GetState<State>;
declare const getConsole: () => ConsoleState;
declare const isConsolePersistent: () => boolean;
declare const isConsoleOpen: () => boolean;
declare const isConsoleEnabled: () => boolean;
declare const set: import("zustand").SetState<State>;
declare const setConsoleLogs: () => void;
declare const setConsolePersistent: (persist: boolean) => void;
declare const setConsoleOpen: (open: boolean) => void;
declare const setConsoleEnabled: (enabled: boolean) => void;
declare const setConsolePersistentTrue: () => void;
declare const setConsoleOpenTrue: () => void;
declare const setConsoleEnabledTrue: () => void;
declare const setConsolePersistentFalse: () => void;
declare const setConsoleOpenFalse: () => void;
declare const setConsoleEnabledFalse: () => void;
declare const toggleConsolePersistent: () => void;
declare const toggleConsoleOpen: () => void;
declare const toggleConsoleEnabled: () => void;
declare const reRenderConsole: () => void;
declare const useConsole: () => ConsoleState;
declare const useIsConsolePersistent: () => boolean;
declare const useIsConsoleOpen: () => boolean;
declare const useIsConsoleEnabled: () => boolean;
export { useStore as useConsoleStore, get as getConsoleStoreState, set as setConsoleStoreState, getConsole, isConsolePersistent, isConsoleOpen, isConsoleEnabled, setConsoleLogs, setConsolePersistent, setConsoleOpen, setConsoleEnabled, setConsolePersistentTrue, setConsoleOpenTrue, setConsoleEnabledTrue, setConsolePersistentFalse, setConsoleOpenFalse, setConsoleEnabledFalse, toggleConsolePersistent, toggleConsoleOpen, toggleConsoleEnabled, reRenderConsole, useConsole, useIsConsolePersistent, useIsConsoleOpen, useIsConsoleEnabled, };
